buildscript {
	ext {
		kotlinVersion = '1.2.51'
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url 'http://repo.spring.io/plugins-release' }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
	}
}

subprojects {
	apply plugin: 'kotlin'
	apply plugin: 'kotlin-spring'
	apply plugin: 'kotlin-kapt'
	apply plugin: 'eclipse'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'propdeps'
	apply plugin: 'propdeps-idea'

	sourceCompatibility = 1.8
	compileKotlin {
		kotlinOptions {
			freeCompilerArgs = ["-Xjsr305=strict"]
			jvmTarget = "1.8"
		}
	}
	compileTestKotlin {
		kotlinOptions {
			freeCompilerArgs = ["-Xjsr305=strict"]
			jvmTarget = "1.8"
		}
	}

	repositories {
		mavenCentral()
		jcenter()
	}

	/* intellij上でbuildする際にannotation processを有効にするために出力先を指定する */
	idea {
		module {
			outputDir compileJava.destinationDir
			testOutputDir file('build/classes/java/test')
		}
	}

	ext {
		springCloudVersion = 'Finchley.SR1'
	}

	jar {
		enabled = true
	}

	dependencies {
		compile('org.springframework.boot:spring-boot-starter-actuator')
		compile('org.springframework.boot:spring-boot-starter-web')
		compile('com.fasterxml.jackson.module:jackson-module-kotlin')
		compile('org.springframework.cloud:spring-cloud-starter-netflix-ribbon')
		compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
		compile('org.springframework.cloud:spring-cloud-starter-openfeign')
		compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
		compile("org.jetbrains.kotlin:kotlin-reflect")
		compile("org.jetbrains.kotlin:kotlin-reflect")
		testCompile('org.springframework.boot:spring-boot-starter-test')

		optional 'org.springframework.boot:spring-boot-configuration-processor'
		kapt 'org.springframework.boot:spring-boot-configuration-processor'
	}

	processResources.destinationDir = compileJava.destinationDir
	compileJava.dependsOn processResources

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

}

group = 'jp.john.satoh'
version = '0.0.1-SNAPSHOT'

